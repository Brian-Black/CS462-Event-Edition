* Lab 0:

The purpose of this lab is to create a base server confirmation that will be used in future labs. You will modify an existing AMI (Amazon Machine Image) and configure it with a web server and a bootstrapping mechanism.

- Get an AWS instance running
- Set up a simple static Web page that displays your name

* Lab Requirements 

- Boot an EC2 instance based on an Ubuntu 11.10 AMI (https://console.aws.amazon.com/ec2/home?region=us-east-1#launchAmi=ami-bf62a9d6)
- Add a bootstrapping procedure based on the User Data script supplied at launch
- Install a web server with a basic configuration
- Serve a static web page that displays your name

* Passoff Procedure 

- An automated passoff procedure will be linked here soon.

* Booting an AMI 

The [https://console.aws.amazon.com/ AWS Management Console] is the easiest way to control EC2 Instances. Amazon also provides [http://aws.amazon.com/developertools/351 command line tools], or you can use [http://aws.amazon.com/developertools/609 ElasticFox] (a Firefox plugin).

You will need to create a key pair that will allow you to login to the server after it has launched. If you use the AWS Management Console, this is part of the process to launch a new instance and is very simple to do. If you'd rather use another tool, [http://aws.amazon.com/developertools/583 this screencast] (for Windows) or [http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/index.html?setting-up-your-tools.html this documentation] (Windows or *nix) details how to get the certificates and set up your system properly.

Find your AMI in the provided list and launch it. If you are using the standard Ubuntu 11.10 AMI, you can follow this link: https://console.aws.amazon.com/ec2/home?region=us-east-1#launchAmi=ami-bf62a9d6

* Basic Web Server 

Use Apache to create a basic webserver.

Install the necessary packages for Apache (or your server of choice). You can also install packages for the programming language you want to use in later labs if you wish.

* Simple index page

If accessed, the webserver should respond with a static page displaying your name.

The purpose of this page is simply to demonstrate that your web server is configured properly.

* Bootstrapping the Server 

The bootstrapping process allows you to start from a vanilla AMI or from your own custom AMI and automatically configure the server to install packages, run desired services, and download appropriate code.

The main piece of the process is the User Data script. This script is copied into the User Data field (or passed as a command line argument) when launching an instance. It might install necessary packages, download your web app code from S3 or a Git repository.

One good solution is to have the script be very simple, downloading the full code for the server and then executing a more in-depth (and more easily updated) script that actually installs packages and copies the code to the proper locations.

** Notes 
You may find it useful to put your code in a Subversion or Git repository and have your bootstrap script copy the code from there to your server. This makes it very easy to update your server.

